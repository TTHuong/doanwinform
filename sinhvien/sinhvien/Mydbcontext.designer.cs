#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace sinhvien
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="sinhvien")]
	public partial class MydbcontextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertanhdaidien_giangvien(anhdaidien_giangvien instance);
    partial void Updateanhdaidien_giangvien(anhdaidien_giangvien instance);
    partial void Deleteanhdaidien_giangvien(anhdaidien_giangvien instance);
    #endregion
		
		public MydbcontextDataContext() : 
				base(global::sinhvien.Properties.Settings.Default.sinhvienConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MydbcontextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MydbcontextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MydbcontextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MydbcontextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<anhdaidien_giangvien> anhdaidien_giangviens
		{
			get
			{
				return this.GetTable<anhdaidien_giangvien>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.anhdaidien_giangvien")]
	public partial class anhdaidien_giangvien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _magiangvien;
		
		private System.Data.Linq.Binary _anhdaidien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmagiangvienChanging(string value);
    partial void OnmagiangvienChanged();
    partial void OnanhdaidienChanging(System.Data.Linq.Binary value);
    partial void OnanhdaidienChanged();
    #endregion
		
		public anhdaidien_giangvien()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_magiangvien", DbType="NChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string magiangvien
		{
			get
			{
				return this._magiangvien;
			}
			set
			{
				if ((this._magiangvien != value))
				{
					this.OnmagiangvienChanging(value);
					this.SendPropertyChanging();
					this._magiangvien = value;
					this.SendPropertyChanged("magiangvien");
					this.OnmagiangvienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anhdaidien", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary anhdaidien
		{
			get
			{
				return this._anhdaidien;
			}
			set
			{
				if ((this._anhdaidien != value))
				{
					this.OnanhdaidienChanging(value);
					this.SendPropertyChanging();
					this._anhdaidien = value;
					this.SendPropertyChanged("anhdaidien");
					this.OnanhdaidienChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
